!function(){"use strict";function t(){if("function"!=typeof Auth0Lock)throw new Error("Auth0Lock must be loaded.");Auth0Lock.prototype.getClient=function(){},Auth0Lock.prototype.parseHash=function(){},this.init=function(t){if(!t)throw new Error("clientID and domain must be provided to lock");this.clientID=t.clientID,this.domain=t.domain,this.options=t.options||{}},this.$get=["$rootScope",function(t){function n(n){var o=t.$root.$$phase;"$apply"===o||"$digest"===o?n&&"function"==typeof n&&n():t.$apply(n)}function o(t){var o=t.length-1,e=t[o];return"function"==typeof e&&(t[o]=function(){var t=arguments;n(function(){e.apply(i,t)})}),t}var i=new Auth0Lock(this.clientID,this.domain,this.options),e={clientID:this.clientID,domain:this.domain},r={},a=[];for(var c in i)"function"==typeof i[c]&&a.push(c);for(var c=0;c<a.length;c++)r[a[c]]=function(t){var n=function(){return i[t].apply(i,o(arguments))};return n}(a[c]);return r.interceptHash=function(){t.$on("$locationChangeStart",function(t,n){if(/id_token=/.test(n)||/error=/.test(n))var o=new Auth0(e),r=window.location.hash?window.location.hash:"#"+n.replace(/http.?:\/\/[^\/]+/,"").slice(1),a=o.parseHash(r);a&&a.idToken&&i.emit("authenticated",a),a&&a.error&&i.emit("authorization_error",a)})},r}]}angular.module("auth0.lock",[]).provider("lock",t)}();